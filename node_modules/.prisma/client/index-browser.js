
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 3.11.0
 * Query Engine version: 46cd7ed225f7eb084fb5035de2e89efce45aab93
 */
Prisma.prismaVersion = {
  client: "3.11.0",
  engine: "46cd7ed225f7eb084fb5035de2e89efce45aab93"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = 'DbNull'
Prisma.JsonNull = 'JsonNull'
Prisma.AnyNull = 'AnyNull'

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.AdminScalarFieldEnum = makeEnum({
  id: 'id',
  full_name: 'full_name',
  phone: 'phone',
  otp: 'otp'
});

exports.Prisma.MediaScalarFieldEnum = makeEnum({
  id: 'id',
  reference_id: 'reference_id',
  type: 'type',
  media_type: 'media_type',
  path: 'path',
  created_at: 'created_at',
  updated_at: 'updated_at'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  id: 'id',
  full_name: 'full_name',
  email: 'email',
  phone: 'phone',
  gender: 'gender',
  otp: 'otp',
  dob: 'dob',
  health_id: 'health_id',
  passkey: 'passkey',
  time_zone: 'time_zone',
  remember_token: 'remember_token',
  verified: 'verified',
  skipped_preferences: 'skipped_preferences',
  has_preferences: 'has_preferences',
  created_at: 'created_at',
  updated_at: 'updated_at',
  image: 'image'
});

exports.Prisma.User_relativesScalarFieldEnum = makeEnum({
  id: 'id',
  full_name: 'full_name',
  phone: 'phone',
  gender: 'gender',
  dob: 'dob',
  relation: 'relation',
  created_at: 'created_at',
  updated_at: 'updated_at',
  userId: 'userId',
  health_id: 'health_id'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});


exports.Prisma.ModelName = makeEnum({
  admin: 'admin',
  media: 'media',
  user: 'user',
  user_relatives: 'user_relatives'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
